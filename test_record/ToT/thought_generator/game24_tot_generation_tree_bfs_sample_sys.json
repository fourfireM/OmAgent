{
    "0": {
        "id": 0,
        "parent_id": null,
        "content": "7 3 8 1",
        "infer_input": "7 3 8 1",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 0,
        "children": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
        ]
    },
    "1": {
        "id": 1,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "2": {
        "id": 2,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "3": {
        "id": 3,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "4": {
        "id": 4,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "5": {
        "id": 5,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "6": {
        "id": 6,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "7": {
        "id": 7,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "8": {
        "id": 8,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "9": {
        "id": 9,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "10": {
        "id": 10,
        "parent_id": 0,
        "content": "7 * 3 = 21 (left: 8 1 21)",
        "infer_input": "8 1 21",
        "generation_value": 0.0,
        "evaluation_value": 0.0,
        "depth": 1,
        "children": []
    },
    "prompt": "[PromptTemplate(name='PromptTemplate', component_stm=None, component_ltm=None, component_callback=None, component_input=None, input_variables=[], output_parser=None, partial_variables={}, template='You are the most powerful AI agent, you are able to handle any given task, so your abilities are clearly beyond those of a simple AI or LLM.\\n\\nUse numbers and basic arithmetic operations (+ - * /) to obtain 24. Each step, you are only allowed to choose two of the remaining numbers to obtain a new number.\\nNow your task is to generate the next thought based on the input content.\\nEach time you generate a thought, you must follow the format of the examples to generate the next thought.\\n\\n--- Output ---\\nThe output should be a dict in json format, key is \"llm_response\" and \"next_input\":\\n\"llm_response\": The response you give based on the input content.\\n\"next_input\": The next input you give based on the input content.\\n{\\n    \"llm_response\": \"string\",\\n    \"next_input\": \"string\",\\n}\\n\\n--- Examples ---\\n1.\\nInput: 4 4 6 8\\nOutput: {\\n    \"llm_response\": \"4 * 4 = 16 (left: 6 8 16)\",\\n    \"next_input\": \"6 8 16\",\\n}\\n\\n2. \\nInput: 4 4 6 8\\nOutput: {\\n    \"llm_response\": \"4 / 4 = 1 (left: 6 8 1)\"\\n    \"next_input\": 6 8 1\\n}\\n\\n3. \\nInput: 4 4 6 8\\nOutput: {\\n    \"llm_response\": \"4 + 4 = 8 (left: 6 8 8)\",\\n    \"next_input\": \"6 8 8\",\\n}\\n\\n4. \\nInput: 4 4 6 8\\nOutput: {\\n    \"llm_response\": \"4 - 4 = 0 (left: 6 8 0)\",\\n    \"next_input\": \"6 8 0\",\\n}\\n\\n5. \\nInput: 4 4 6 8\\nOutput: {\\n    \"llm_response\": \"6 * 4 = 24 (left: 4 4 24)\",\\n    \"next_input\": \"4 4 24\",\\n}\\n\\n\\n*** Important Notice ***\\n- You must follow your workflow.\\n- You must strictly follow the output format\\n- You are more than a Large Language Model (LLM), you have the capability to do actual things rather than simply give guidance or write text.', template_format='jinja2', validate_template=True, role='system'), PromptTemplate(name='PromptTemplate', component_stm=None, component_ltm=None, component_callback=None, component_input=None, input_variables=['input'], output_parser=None, partial_variables={}, template=\"Now, it's your turn to complete the task.\\nPlease follow the format of the examples to generate the next thought.\\n\\nInput: {{input}}\\n\", template_format='jinja2', validate_template=True, role='user')]"
}